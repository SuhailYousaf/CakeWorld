{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\TheCakeWorld\\\\CakeWorld\\\\src\\\\pages\\\\CakeDetails.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { MenuList } from \"../data/cakes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CakeDetails = () => {\n  _s();\n  const {\n    cakeId\n  } = useParams();\n  console.log(\"cakeId:\", cakeId); // Log cakeId to check if it's correct\n\n  const cake = MenuList.find(cake => cake.id === parseInt(cakeId));\n  if (!cake) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Cake not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: cake.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: cake.image,\n      alt: cake.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: cake.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: \", cake.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(CakeDetails, \"sfrc0miWNAh8jeL4CUTyZCWDQBA=\", false, function () {\n  return [useParams];\n});\n_c = CakeDetails;\nexport default CakeDetails;\nvar _c;\n$RefreshReg$(_c, \"CakeDetails\");","map":{"version":3,"names":["React","useParams","MenuList","jsxDEV","_jsxDEV","CakeDetails","_s","cakeId","console","log","cake","find","id","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","name","src","image","alt","description","price","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/TheCakeWorld/CakeWorld/src/pages/CakeDetails.js"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { MenuList } from \"../data/cakes\";\r\n\r\nconst CakeDetails = () => {\r\n  const { cakeId } = useParams();\r\n  console.log(\"cakeId:\", cakeId); // Log cakeId to check if it's correct\r\n\r\n  const cake = MenuList.find((cake) => cake.id === parseInt(cakeId));\r\n\r\n  if (!cake) {\r\n    return <div>Cake not found</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      \r\n      <h2>{cake.name}</h2>\r\n      <img src={cake.image} alt={cake.name} />\r\n      <p>{cake.description}</p>\r\n      <p>Price: {cake.price}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CakeDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAO,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC9BO,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAAC,CAAC,CAAC;;EAEhC,MAAMG,IAAI,GAAGR,QAAQ,CAACS,IAAI,CAAED,IAAI,IAAKA,IAAI,CAACE,EAAE,KAAKC,QAAQ,CAACN,MAAM,CAAC,CAAC;EAElE,IAAI,CAACG,IAAI,EAAE;IACT,oBAAON,OAAA;MAAAU,QAAA,EAAK;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClC;EAEA,oBACEd,OAAA;IAAAU,QAAA,gBAEEV,OAAA;MAAAU,QAAA,EAAKJ,IAAI,CAACS;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpBd,OAAA;MAAKgB,GAAG,EAAEV,IAAI,CAACW,KAAM;MAACC,GAAG,EAAEZ,IAAI,CAACS;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxCd,OAAA;MAAAU,QAAA,EAAIJ,IAAI,CAACa;IAAW;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBd,OAAA;MAAAU,QAAA,GAAG,SAAO,EAACJ,IAAI,CAACc,KAAK;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAACZ,EAAA,CAnBID,WAAW;EAAA,QACIJ,SAAS;AAAA;AAAAwB,EAAA,GADxBpB,WAAW;AAqBjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}